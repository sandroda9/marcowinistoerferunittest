version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.9

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Clean and Build
          command: mvn -f unittest/pom.xml clean package -DskipTests

  unit_test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: mvn -f unittest/pom.xml test -Dtest=com.mayab.quality.unittest.service.UserServiceTest
      - store_test_results:
          path: unittest/target/surefire-reports
      - store_artifacts:
          path: unittest/target/surefire-reports
          destination: unit-test-results

  integration_test:
    docker:
      - image: cimg/openjdk:17.0
      - image: circleci/mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: calidad2024
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    steps:
      - checkout
      - run:
          name: Wait for MySQL to Start
          command: |
            for i in $(seq 1 30); do
              nc -z localhost 3306 && echo "MySQL is up!" && break
              echo "Waiting for MySQL..."
              sleep 1
            done
            if ! nc -z localhost 3306; then
              echo "MySQL failed to start." && exit 1
            fi
      - run:
          name: Run Integration Tests
          command: mvn -f unittest/pom.xml failsafe:integration-test -Dtest=com.mayab.quality.integration.UserServiceTest
      - store_test_results:
          path: unittest/target/failsafe-reports
      - store_artifacts:
          path: unittest/target/failsafe-reports
          destination: integration-test-results

  selenium_test:
    docker:
      - image: cimg/openjdk:17.0-browsers
    steps:
      - checkout
      - browser-tools/install-browser-tools
      - run:
          name: Run Selenium Functional Tests
          command: mvn -f unittest/pom.xml verify -Dtest=com.mayab.quality.functional.CRUDSeleniumTest
      - store_artifacts:
          path: unittest/src/screenshots/
          destination: functional-test-screenshots
      - store_test_results:
          path: unittest/target/surefire-reports

  publish_results:
    docker:
      - image: cimg/openjdk:17.0-browsers
    steps:
      - checkout
      - run:
          name: Push Screenshots to GitHub Pages
          command: |
            git config --global user.email "sandro.danner@bluewin.ch"
            git config --global user.name "sandroda9"
            git fetch origin gh-pages || git checkout --orphan gh-pages
            git checkout gh-pages
            mkdir -p screenshots  # Ensure screenshots directory exists
            cp -R unittest/src/screenshots/* screenshots/  # Copy only the screenshots
            git add screenshots/
            if git diff --quiet; then
              echo "No changes to commit."
            else
              git commit -m "Update screenshots for GitHub Pages"
              git push https://$GITHUB_TOKEN@github.com/sandroda9/marcowinistoerferunittest.git gh-pages
            fi

  deploy:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Deploy Application
          command: echo "Deploy application"

workflows:
  build_and_test_and_deploy:
    jobs:
      - build-and-test
      - unit_test:
          requires:
            - build-and-test
          filters:
            branches:
              ignore:
                - gh-pages 
      - integration_test:
          requires:
            - unit_test
          filters:
            branches:
              ignore:
                - gh-pages 
      - selenium_test:
          requires:
            - integration_test
      - publish_results:
          requires:
            - selenium_test
      - deploy:
          requires:
            - publish_results
          filters:
            branches:
              only:
                - main
